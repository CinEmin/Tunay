/*
Deployment script for TunayDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TunayDB"
:setvar DefaultFilePrefix "TunayDB"
:setvar DefaultDataPath "C:\Users\eciftci\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\eciftci\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key da47bb5f-4e42-4d66-bf57-5b4b362bf5ba is skipped, element [dbo].[ProductQuality].[Abs520Max] (SqlSimpleColumn) will not be renamed to Abs520Min';


GO
PRINT N'Rename refactoring operation with key 15b11b53-7c26-4e29-8c4c-5fa4ec9e0983 is skipped, element [dbo].[ProductQuality].[Abs520] (SqlSimpleColumn) will not be renamed to Abs520Max';


GO
PRINT N'Rename refactoring operation with key 427037d8-6480-4f54-b30b-d20a82e082a7 is skipped, element [dbo].[ProductQuality].[ProductQualityId] (SqlSimpleColumn) will not be renamed to ProductQualityChemicalId';


GO
PRINT N'Rename refactoring operation with key 5cd60749-dcdb-4ba7-a0c4-5053840191ae is skipped, element [dbo].[ProductProperty].[ProductQualityId] (SqlSimpleColumn) will not be renamed to ProductQualityChemicalId';


GO
PRINT N'Rename refactoring operation with key fccdaa73-9fb4-4443-b8cc-3a39d38effd0 is skipped, element [dbo].[ProductQualityPhysical].[Id] (SqlSimpleColumn) will not be renamed to ProductQualityPhysicalId';


GO
PRINT N'Creating [dbo].[FK_ProductQuality_AcidityType]...';


GO
ALTER TABLE [dbo].[ProductQualityChemical] WITH NOCHECK
    ADD CONSTRAINT [FK_ProductQuality_AcidityType] FOREIGN KEY ([AcidityTypeId]) REFERENCES [dbo].[AcidityType] ([AcidityTypeId]);


GO
PRINT N'Altering [dbo].[FullProductInfo]...';


GO
ALTER VIEW [dbo].[FullProductInfo]
	AS SELECT [dbo].[Product].[Id], [dbo].[Product].[ProductName],
	[dbo].[Product].[ProductPropertyId], [dbo].[Product].[ProductQuantity],
	[dbo].[Product].[ProductNotes], [dbo].[Product].[DateProduced],
	[dbo].[Product].[DateCreated], [dbo].[Product].[UserCreated],
	[dbo].[Product].[DateUpdated], [dbo].[Product].[UserUpdated],
	[dbo].[Product].[DateDeleted], [dbo].[Product].[UserDeleted],
	[dbo].[Product].[isDeleted],
	[dbo].[ProductProperty].[ProductId], [dbo].[ProductProperty].[ProductQualityChemicalId],
	[dbo].[ProductPackage].[PackageType],
	[dbo].[ProductPackage].[isInTank], [dbo].[ProductPackage].[TankId],
	[dbo].[ProductPackage].[isInDrum], [dbo].[ProductPackage].[StartingDrumNumber],
	[dbo].[ProductPackage].[EndingDrumNumber], [dbo].[ProductPackage].[TotalDrumCount],
	[dbo].[ProductPackage].[isInPallet], [dbo].[ProductPackage].[StartingPalletNumber],
	[dbo].[ProductPackage].[EndingPalletNumber], [dbo].[ProductPackage].[TotalPalletCount],
	[dbo].[ProductPackage].[ProductPackageNote],  [dbo].[ProductQualityPhysical].[Appearance],
	[dbo].[ProductQualityPhysical].[Taste], [dbo].[ProductQualityPhysical].[Color],
	[dbo].[ProductQualityPhysical].[Smell],
	[dbo].[ProductQualityChemical].[BrixMin], [dbo].[ProductQualityChemical].[BrixMax],
	[dbo].[ProductQualityChemical].[BrixAvg], [dbo].[ProductQualityChemical].[AcidityTypeId],
	[dbo].[ProductQualityChemical].[AcidityMin], [dbo].[ProductQualityChemical].[AcidityMax],
	[dbo].[ProductQualityChemical].[AcidityAvg], [dbo].[ProductQualityChemical].[PhMin],
	[dbo].[ProductQualityChemical].[PhMax], [dbo].[ProductQualityChemical].[PhAvg],
	[dbo].[ProductQualityChemical].[isPuree], [dbo].[ProductQualityChemical].[isCloudy],
	[dbo].[ProductQualityChemical].[HunterLMin], [dbo].[ProductQualityChemical].[HunterLMax],
	[dbo].[ProductQualityChemical].[HunterLAvg], [dbo].[ProductQualityChemical].[HunerAMin],
	[dbo].[ProductQualityChemical].[HunterAMax], [dbo].[ProductQualityChemical].[HunterAAvg],
	[dbo].[ProductQualityChemical].[HunterBMin], [dbo].[ProductQualityChemical].[HunterBMax],
	[dbo].[ProductQualityChemical].[HunterBAvg], [dbo].[ProductQualityChemical].[isRedClear],
	[dbo].[ProductQualityChemical].[Abs520Min], [dbo].[ProductQualityChemical].[Abs520Max],
	[dbo].[ProductQualityChemical].[Abs520Avg], [dbo].[ProductQualityChemical].[Abs430Min],
	[dbo].[ProductQualityChemical].[Abs430Max], [dbo].[ProductQualityChemical].[Abs430Avg],
	[dbo].[ProductQualityChemical].[ColorRatio], [dbo].[ProductQualityChemical].[isLightClear],
	[dbo].[ProductQualityChemical].[Trans440Min], [dbo].[ProductQualityChemical].[Trans440Max],
	[dbo].[ProductQualityChemical].[Trans440Avg], [dbo].[ProductQualityChemical].[Trans625Min],
	[dbo].[ProductQualityChemical].[Trans625Max], [dbo].[ProductQualityChemical].[Trans625Avg]

	FROM

	[dbo].[Product]

	LEFT JOIN dbo.ProductProperty ON [dbo].[Product].[Id] = [dbo].[ProductProperty].[ProductId]
	LEFT JOIN dbo.ProductPackage ON [dbo].[ProductProperty].[ProductPackageId] = [dbo].[ProductPackage].[ProductPackageId]
	LEFT JOIN dbo.ProductQualityPhysical ON [dbo].[ProductProperty].[ProductQualityPhysicalId] =[dbo].[ProductQualityPhysical].[ProductQualityPhysicalId]
	LEFT JOIN dbo.ProductQualityChemical ON [dbo].[ProductProperty].[ProductQualityChemicalId] = [dbo].[ProductQualityChemical].[ProductQualityChemicalId]
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'da47bb5f-4e42-4d66-bf57-5b4b362bf5ba')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('da47bb5f-4e42-4d66-bf57-5b4b362bf5ba')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '15b11b53-7c26-4e29-8c4c-5fa4ec9e0983')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('15b11b53-7c26-4e29-8c4c-5fa4ec9e0983')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '427037d8-6480-4f54-b30b-d20a82e082a7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('427037d8-6480-4f54-b30b-d20a82e082a7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5cd60749-dcdb-4ba7-a0c4-5053840191ae')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5cd60749-dcdb-4ba7-a0c4-5053840191ae')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fccdaa73-9fb4-4443-b8cc-3a39d38effd0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fccdaa73-9fb4-4443-b8cc-3a39d38effd0')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[ProductQualityChemical] WITH CHECK CHECK CONSTRAINT [FK_ProductQuality_AcidityType];


GO
PRINT N'Update complete.';


GO
